from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes


class TelegramView:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram.
    –ù–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏, —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±–æ—Ç–∞
    """
    def __init__(self, state_manager):
        self.state_manager = state_manager
    # –í–∏–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    async def show_main_menu(self, update: Update, is_admin: bool):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        keyboard = [[InlineKeyboardButton("üìã –ü–æ–º–æ—â—å", callback_data="help")]]

        # –ö–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
        if is_admin:
            keyboard.append([
                InlineKeyboardButton("üîë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏", callback_data="session_menu"),
                InlineKeyboardButton("üåê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏", callback_data="proxy_menu")
            ])
            keyboard.append([
                InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ–π —Ö—É–π–Ω–∏", callback_data="status")
            ])

        reply_markup = InlineKeyboardMarkup(keyboard)

        if hasattr(update, 'callback_query') and update.callback_query and update.callback_query.message:
            await update.callback_query.message.edit_text(
                "üì± *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–æ–≤ –∏–∑ CSV –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–≥\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=reply_markup,
                parse_mode="Markdown"
            )
        else:
            await update.message.reply_text(
                "üì± *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–æ–≤ –∏–∑ CSV –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–≥\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=reply_markup,
                parse_mode="Markdown"
            )

    async def show_proxy_menu(self, update: Update):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏"""
        keyboard = [
            [
                InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data="add_proxy"),
                InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data="update_proxy")
            ],
            [
                InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data="delete_proxy"),
                InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data="check_proxies")
            ],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.callback_query.message.edit_text(
            "üåê *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )

    async def show_session_menu(self, update: Update):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏—è–º–∏"""
        keyboard = [
            [
                InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data="add_session"),
                InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data="update_session")
            ],
            [
                InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data="delete_session"),
                InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Å—Å–∏–∏", callback_data="check_sessions")
            ],
            [
                InlineKeyboardButton("üîÑ –ù–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–æ–∫—Å–∏ —Å–µ—Å—Å–∏—è–º", callback_data="assign_proxys_to_sessions")
            ],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.callback_query.message.edit_text(
            "üîë *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )

    async def send_help_message(self, update: Update):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.callback_query.message.edit_text(
            "üîë *Help menu*\n\n–í –¥–∞–Ω–æ–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å CSV –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¢–ì, "
            "–±–æ—Ç –≤–µ—Ä–Ω—ë—Ç –¥–æ–∫—É–º–µ–Ω—Ç –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –≤–∏–¥–µ, –Ω–æ —Ç–æ–ª—å–∫–æ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –≥–¥–µ –µ—Å—Ç—å –¢–ì\n"
            "\n*–§–æ—Ä–º–∞—Ç —Ç–∞–±–ª–∏—Ü—ã —Ñ–∞–π–ª–∞: phone, name, ...*\n"
            "\nüìã*–í–∞–∂–Ω–æ —á—Ç–æ–±—ã –ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –±—ã–ª –Ω–æ–º–µ—Ä–æ–º*"
            "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )

    async def add_proxy_menu(self, update: Update):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏"""
        keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.callback_query.message.edit_text(
            "‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏</b>\n"
            "\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–∫—Å–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "
            "<code>&lt;proxy_type&gt; &lt;login:password@host:port&gt;</code>\n"
            "\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup,
            parse_mode="HTML"
        )

    async def show_result_message(self, update: Update, result: dict):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è —Å –∫–ª—é—á–∞–º–∏ status –∏ message"""
        text = ''
        keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]]

        reply_markup = InlineKeyboardMarkup(keyboard)

        if result['status'] == 'success':
            text = f"‚úÖ {result['message']}"
        else:
            text = f"‚ùå –û—à–∏–±–∫–∞: {result['message']}"

        await update.callback_query.message.edit_text(
            "‚ûï <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:<b>\n"
            f"\n{text}\n"
            "\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup,
            parse_mode="HTML"
        )

    async def show_status_results_menu(self, update: Update, sessions_status: str, proxies_status: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º —Å–µ—Å—Å–∏–π –∏ –ø—Ä–æ–∫—Å–∏"""
        keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.callback_query.message.edit_text(
            "‚ûï *–°—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–π –∏ –ø—Ä–æ–∫—Å–∏:*\n"
            f"\n–°—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–π: {sessions_status}\n–°—Ç–∞—Ç—É—Å –ø—Ä–æ–∫—Å–∏: {proxies_status} \n"
            "\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )

    # –ú–µ—Ç–æ–¥—ã –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    async def send_message(self, update: Update, message: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        await update.message.reply_text(message)

    async def send_result_message(self, update: Update, result: dict):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è —Å –∫–ª—é—á–∞–º–∏ status –∏ message
        """
        if result['status'] == 'success':
            await update.message.reply_text(f"‚úÖ {result['message']}")
        else:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {result['message']}")

    async def send_document(self, update: Update, context: ContextTypes.DEFAULT_TYPE, file_path: str, caption: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        with open(file_path, 'rb') as file:
            await context.bot.send_document(chat_id=update.effective_chat.id, document=file, caption=caption)

    async def send_code_request(self, chat_id, context, phone):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        message = f"üì± –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –Ω–æ–º–µ—Ä–∞ {phone}:"
        sent_msg = await context.bot.send_message(chat_id=chat_id, text=message)
        return sent_msg.message_id

    async def send_password_request(self, chat_id, context, phone):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
        message = f"üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –Ω–æ–º–µ—Ä–∞ {phone}:"
        sent_msg = await context.bot.send_message(chat_id=chat_id, text=message)
        return sent_msg.message_id

    async def send_start_csv_process(self, update: Update):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ CSV —Ñ–∞–π–ª–∞"""
        message = f"–ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–∞ {update.message.document.file_name}. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è..."
        await update.message.reply_text(message)
