from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes


class TelegramView:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram.
    –ù–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏, —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
    """

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    async def send_welcome_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        message = "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–æ–≤ –≤ Telegram. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥."
        await update.message.reply_text(message)

    async def send_help_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        message = ("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                   "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
                   "/help - –°–ø—Ä–∞–≤–∫–∞\n"
                   "/status - –°—Ç–∞—Ç—É—Å –ø—Ä–æ–∫—Å–∏ –∏ —Å–µ—Å—Å–∏–π\n"
                   "/add_session - –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Å—Å–∏—é\n"
                   "/check_sessions - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Å—Å–∏–∏\n"
                   "/update_session - –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏\n"
                   "/delete_session - –£–¥–∞–ª–∏—Ç—å —Å–µ—Å—Å–∏—é\n")
        await update.message.reply_text(message)

    async def send_access_denied(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ –≤ –¥–æ—Å—Ç—É–ø–µ"""
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

    # –ú–µ—Ç–æ–¥—ã –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    async def send_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE, message: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        await update.message.reply_text(message)

    async def send_result_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE, result: dict):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è —Å –∫–ª—é—á–∞–º–∏ status –∏ message
        """
        if result['status'] == 'success':
            await update.message.reply_text(f"‚úÖ {result['message']}")
        else:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {result['message']}")

    async def send_status_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE, sessions_status: str,
                                  proxies_status: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º —Å–µ—Å—Å–∏–π –∏ –ø—Ä–æ–∫—Å–∏"""
        message = f"–°—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–π: {sessions_status}\n–°—Ç–∞—Ç—É—Å –ø—Ä–æ–∫—Å–∏: {proxies_status}"
        await update.message.reply_text(message)

    async def send_check_results(self, update: Update, context: ContextTypes.DEFAULT_TYPE, result: dict):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–æ–≤"""
        message = f"–ù–∞–π–¥–µ–Ω–æ {result['telegram_found']} –Ω–æ–º–µ—Ä–æ–≤ —Å Telegram –∏–∑ {result['total_checked']}"
        await update.message.reply_text(message)

    async def send_document(self, update: Update, context: ContextTypes.DEFAULT_TYPE, file_path: str, caption: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        with open(file_path, 'rb') as file:
            await context.bot.send_document(chat_id=update.effective_chat.id, document=file, caption=caption)

    async def send_code_request(self, chat_id, context, phone):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        message = f"üì± –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –Ω–æ–º–µ—Ä–∞ {phone}:"
        sent_msg = await context.bot.send_message(chat_id=chat_id, text=message)
        return sent_msg.message_id

    async def send_password_request(self, chat_id, context, phone):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
        message = f"üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –Ω–æ–º–µ—Ä–∞ {phone}:"
        sent_msg = await context.bot.send_message(chat_id=chat_id, text=message)
        return sent_msg.message_id